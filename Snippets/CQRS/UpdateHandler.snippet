<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Update Handler</Title>
            <Shortcut>createUpdateHandler</Shortcut>
            <Description>Code snippet for a Update Handler class in CQRS</Description>
            <Author>Sparkymod</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>Model</ID>
                    <Default>Model</Default>
                </Literal>
            </Declarations>
            <Code Language="csharp"><![CDATA[
using $Namespace$.Commands;
using $Namespace$.Validators;

namespace $Namespace$;

public class Update$Model$CommandHandler : IRequestHandler<Update$Model$Command, Payload<Info$Model$Dto, List<ValidationFailure>>>
{
    private readonly IMapper _mapper;
    private readonly Update$Model$CommandValidator _validator;

    public Update$Model$CommandHandler(IMapper mapper, Update$Model$CommandValidator validator)
    {
        _mapper = mapper;
        _validator = validator;
    }
    public async Task<Payload<Info$Model$Dto, List<ValidationFailure>>> Handle(Update$Model$Command request, CancellationToken cancellationToken)
    {
        // Catch possible exceptions and let the others exception propagate.
        try
        {
            // Validate the request.
            var validationResult = await _validator.ValidateAsync(request, cancellationToken);

            // Map the dto to the model.

            // Logic here 


            // If there were any validation errors, return a failure payload.
            if (validationResult.Errors.Count > 0) return validationResult.Errors;

            return new Info$Model$Dto();
        }
        catch (Exception ex)
        {
            return ErrorHelper.LogExceptionAndReturnError<Update$Model$CommandHandler>(ex);
        }
    }
}

            ]]></Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
